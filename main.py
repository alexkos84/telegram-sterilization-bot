import os
import telebot
from telebot import types
from flask import Flask, request
from datetime import datetime
import time
import logging
import requests
import json

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# üìÑ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏–∑ HTML-—Ñ–∞–π–ª–æ–≤
def load_text(filename):
    try:
        path = os.path.join("assets", filename)
        with open(path, encoding="utf-8") as f:
            return f.read()
    except FileNotFoundError:
        logger.error(f"‚ùå –§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return f"–ö–æ–Ω—Ç–µ–Ω—Ç –∏–∑ {filename} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {filename}: {e}")
        return "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"

def load_all_texts():
    texts = {}
    assets_dir = "assets"
    
    if not os.path.exists(assets_dir):
        logger.warning(f"üìÅ –ü–∞–ø–∫–∞ {assets_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return texts
    
    try:
        for filename in os.listdir(assets_dir):
            if filename.endswith('.html'):
                key = filename.replace('.html', '')
                texts[key] = load_text(filename)
                logger.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª: {filename} -> {key}")
        return texts
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤: {e}")
        return texts

# üñºÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
IMAGES = {
    'paid_text': 'https://via.placeholder.com/400x300/FFD700/000000?text=üí∞+–ü–ª–∞—Ç–Ω–∞—è+—Å—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—è',
    'free_text': 'https://via.placeholder.com/400x300/32CD32/FFFFFF?text=üÜì+–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è+—Å—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—è'
}

# –õ–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
LOCAL_IMAGES = {
    'paid_text': os.path.join('assets', 'images', 'paid.jpg'),
    'free_text': os.path.join('assets', 'images', 'free.jpg')
}

# üóÇÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤
texts = load_all_texts()
paid_text = texts.get('paid_text', '–ü–ª–∞—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
free_text = texts.get('free_text', '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')

# ‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = os.environ.get('TOKEN')
if not TOKEN:
    logger.error("‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
    exit(1)

PORT = int(os.environ.get('PORT', 8080))
WEBHOOK_URL = (
    os.environ.get('RAILWAY_STATIC_URL') or 
    os.environ.get('RAILWAY_PUBLIC_DOMAIN') or
    os.environ.get('WEBHOOK_URL')
)

# üì° –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
CHANNEL_USERNAME = 'Lapki_ruchki_Yalta_help'

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# üîç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
logger.info(f"üîç TOKEN: {TOKEN[:10]}...{TOKEN[-5:]}")
logger.info(f"üîç WEBHOOK_URL: {WEBHOOK_URL}")
logger.info(f"üîç PORT: {PORT}")

# üñºÔ∏è –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
def send_message_with_image(chat_id, text, image_key, use_local=False):
    try:
        if use_local:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
            image_path = LOCAL_IMAGES.get(image_key)
            if image_path and os.path.exists(image_path):
                with open(image_path, 'rb') as photo:
                    bot.send_photo(
                        chat_id,
                        photo,
                        caption=text,
                        parse_mode="HTML",
                        disable_web_page_preview=True
                    )
                return True
        else:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ URL
            image_url = IMAGES.get(image_key)
            if image_url:
                bot.send_photo(
                    chat_id,
                    image_url,
                    caption=text,
                    parse_mode="HTML",
                    disable_web_page_preview=True
                )
                return True
        
        # –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        bot.send_message(
            chat_id,
            text,
            parse_mode="HTML",
            disable_web_page_preview=True
        )
        return False
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        # Fallback - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        bot.send_message(
            chat_id,
            text,
            parse_mode="HTML",
            disable_web_page_preview=True
        )
        return False

# üè† –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤ –æ –ø—Ä–∏—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
def get_adoption_posts():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã –æ –ø—Ä–∏—Å—Ç—Ä–æ–π—Å—Ç–≤–µ"""
    return [
        {
            'title': 'üê± –ö–æ—Ç–µ–Ω–æ–∫ –∏–∑ –∫–∞–Ω–∞–ª–∞ @Lapki_ruchki_Yalta_help',
            'description': '–í–æ–∑—Ä–∞—Å—Ç: 2 –º–µ—Å—è—Ü–∞\n–ü–æ–ª: –º–∞–ª—å—á–∏–∫\n–û–∫—Ä–∞—Å: —Ä—ã–∂–∏–π\n–ó–¥–æ—Ä–æ–≤, –∏—â–µ—Ç –¥–æ–º\n\nüìã –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram API',
            'photo': 'https://via.placeholder.com/400x300/FFB6C1/800080?text=üê±+–ö–æ—Ç–µ–Ω–æ–∫',
            'contact': '@Lapki_ruchki_Yalta_help',
            'date': datetime.now().strftime('%d.%m.%Y')
        },
        {
            'title': 'üò∫ –ö–æ—à–µ—á–∫–∞ –∏—â–µ—Ç –¥–æ–º',
            'description': '–í–æ–∑—Ä–∞—Å—Ç: 1 –≥–æ–¥\n–ü–æ–ª: –¥–µ–≤–æ—á–∫–∞\n–û–∫—Ä–∞—Å: —Ç—Ä–µ—Ö—Ü–≤–µ—Ç–Ω–∞—è\n–°—Ç–µ—Ä–∏–ª–∏–∑–æ–≤–∞–Ω–∞, –ª–∞—Å–∫–æ–≤–∞—è',
            'photo': 'https://via.placeholder.com/400x300/98FB98/006400?text=üò∫+–ö–æ—à–µ—á–∫–∞',
            'contact': '@Lapki_ruchki_Yalta_help',
            'date': datetime.now().strftime('%d.%m.%Y')
        },
        {
            'title': 'üêà –í–∑—Ä–æ—Å–ª—ã–π –∫–æ—Ç',
            'description': '–í–æ–∑—Ä–∞—Å—Ç: 3 –≥–æ–¥–∞\n–ü–æ–ª: –º–∞–ª—å—á–∏–∫\n–û–∫—Ä–∞—Å: —Å–µ—Ä—ã–π –ø–æ–ª–æ—Å–∞—Ç—ã–π\n–°–ø–æ–∫–æ–π–Ω—ã–π, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∫–≤–∞—Ä—Ç–∏—Ä—ã',
            'photo': 'https://via.placeholder.com/400x300/87CEEB/000080?text=üêà+–ö–æ—Ç',
            'contact': '@Lapki_ruchki_Yalta_help',
            'date': datetime.now().strftime('%d.%m.%Y')
        }
    ]

# üåê Webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
@app.route(f'/{TOKEN}', methods=['POST'])
def webhook():
    try:
        if request.headers.get('content-type') == 'application/json':
            json_string = request.get_data().decode('utf-8')
            update = telebot.types.Update.de_json(json_string)
            bot.process_new_updates([update])
            return '', 200
        return 'Bad request', 400
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ webhook: {e}")
        return 'Internal error', 500

@app.route('/')
def home():
    return {
        "status": "ü§ñ Bot is running!",
        "time": datetime.now().strftime('%H:%M:%S'),
        "date": datetime.now().strftime('%d.%m.%Y'),
        "bot": "@CatYalta_bot",
        "webhook": f"https://{WEBHOOK_URL}/{TOKEN}" if WEBHOOK_URL else "Not configured"
    }

@app.route('/health')
def health():
    return {
        "status": "ok", 
        "time": datetime.now().isoformat(),
        "bot_info": "Telegram Bot Active"
    }

# üé¨ –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
@bot.message_handler(commands=['start'])
def start(message):
    try:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        markup.add("üè• –°—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—è", "üè† –ü—Ä–∏—Å—Ç—Ä–æ–π—Å—Ç–≤–æ")
        markup.add("üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
        markup.add("‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ")
        bot.send_message(
            message.chat.id, 
            "üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —É–ª–∏—á–Ω—ã–º –∫–æ—à–∫–∞–º!</b>\n\nüêæ –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:",
            reply_markup=markup,
            parse_mode="HTML"
        )
        logger.info(f"üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.id}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ /start: {e}")
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

# üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞
@bot.message_handler(commands=['status'])
def status(message):
    try:
        now = datetime.now().strftime('%d.%m.%Y %H:%M:%S')
        webhook_status = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω" if WEBHOOK_URL else "‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        bot.send_message(
            message.chat.id,
            f"ü§ñ <b>–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ @CatYalta_bot</b>\n\n‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω\n‚è∞ –í—Ä–µ–º—è: <code>{now}</code>\nüÜî –í–∞—à ID: <code>{message.from_user.id}</code>\nüåê Webhook: {webhook_status}",
            parse_mode="HTML"
        )
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ /status: {e}")
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞.")

# üéØ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
@bot.message_handler(func=lambda m: True)
def handle_buttons(message):
    try:
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã
        if message.text == "üè• –°—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add("üí∞ –ü–ª–∞—Ç–Ω–∞—è", "üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è")
            markup.add("üîô –ù–∞–∑–∞–¥")
            bot.send_message(
                message.chat.id,
                "üè• <b>–°—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—è –∫–æ—à–µ–∫ –≤ –Ø–ª—Ç–µ</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø:",
                reply_markup=markup,
                parse_mode="HTML"
            )
            
        elif message.text == "üè† –ü—Ä–∏—Å—Ç—Ä–æ–π—Å—Ç–≤–æ":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add("üë∂ –ö–æ—Ç—è—Ç–∞ –∏—â—É—Ç –¥–æ–º", "üê± –í–∑—Ä–æ—Å–ª—ã–µ –∫–æ—à–∫–∏")
            markup.add("üìù –ü–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ", "üîô –ù–∞–∑–∞–¥")
            bot.send_message(
                message.chat.id,
                "üè† <b>–ü—Ä–∏—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∫–æ—à–µ–∫</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
                reply_markup=markup,
                parse_mode="HTML"
            )
            
        elif message.text == "üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å":
            emergency_text = """üö® <b>–≠–ö–°–¢–†–ï–ù–ù–ê–Ø –ü–û–ú–û–©–¨</b>

üè• <b>–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—ã–µ –∫–ª–∏–Ω–∏–∫–∏ –≤ –Ø–ª—Ç–µ:</b>
üìû –í–µ—Ç–∫–ª–∏–Ω–∏–∫–∞ "–ê–π–±–æ–ª–∏—Ç": <a href="tel:+79781449070">+7 978 144-90-70</a>
üìç –≥. –Ø–ª—Ç–∞, —É–ª. –í–∞—Å–∏–ª—å–µ–≤–∞, 7

üÜò <b>–ü—Ä–∏ –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏–∏:</b>
1Ô∏è‚É£ –ù–µ –¥–∞–≤–∞–π—Ç–µ –≤–æ–¥—É –∏ –µ–¥—É
2Ô∏è‚É£ –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∫ –≤—Ä–∞—á—É
3Ô∏è‚É£ –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–≤–æ—Ç–∞ - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—Ä–∞–∑–µ—Ü

ü©π <b>–ü—Ä–∏ —Ç—Ä–∞–≤–º–∞—Ö:</b>
1Ô∏è‚É£ –ù–µ —Ç—Ä–æ–≥–∞—Ç—å –∂–∏–≤–æ—Ç–Ω–æ–µ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
2Ô∏è‚É£ –û—Å—Ç–æ—Ä–æ–∂–Ω–æ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ –ø–µ—Ä–µ–Ω–æ—Å–∫—É
3Ô∏è‚É£ –î–æ—Å—Ç–∞–≤–∏—Ç—å –∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä—É

üì± <b>–í–æ–ª–æ–Ω—Ç–µ—Ä—ã –æ–Ω–ª–∞–π–Ω:</b>
Telegram: @Lapki_ruchki_Yalta_help"""
            
            bot.send_message(
                message.chat.id,
                emergency_text,
                parse_mode="HTML",
                disable_web_page_preview=True
            )
            
        elif message.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
            contacts_text = """üìû <b>–í–ê–ñ–ù–´–ï –ö–û–ù–¢–ê–ö–¢–´</b>

üë• <b>–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä—ã –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–≤:</b>
üîπ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ (—Å—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—è): <a href="tel:+79781449070">+7 978 144-90-70</a>
üîπ –ê–Ω–Ω–∞ (–ø—Ä–∏—Å—Ç—Ä–æ–π—Å—Ç–≤–æ): <a href="tel:+79780000001">+7 978 000-00-01</a>

üè• <b>–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –∫–ª–∏–Ω–∏–∫–∏:</b>
üîπ "–ê–π–±–æ–ª–∏—Ç": <a href="tel:+79781449070">+7 978 144-90-70</a>
üìç –≥. –Ø–ª—Ç–∞, —É–ª. –í–∞—Å–∏–ª—å–µ–≤–∞, 7

üì± <b>–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏:</b>
üîπ Telegram –∫–∞–Ω–∞–ª: @Lapki_ruchki_Yalta_help
üîπ –û—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–≤

üí° <b>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b>
–ó–∞—è–≤–∫–∏ –Ω–∞ —Å—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—é: 8:00-9:00 (–∫—Ä–æ–º–µ —á–µ—Ç–≤–µ—Ä–≥–∞)"""
            
            bot.send_message(
                message.chat.id,
                contacts_text,
                parse_mode="HTML",
                disable_web_page_preview=True
            )
            
        elif message.text == "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ":
            about_text = """‚ÑπÔ∏è <b>–û –ü–†–û–ï–ö–¢–ï "–ü–û–ú–û–©–¨ –£–õ–ò–ß–ù–´–ú –ö–û–®–ö–ê–ú –Ø–õ–¢–´"</b>

üéØ <b>–ù–∞—à–∞ –º–∏—Å—Å–∏—è:</b>
–ü–æ–º–æ—â—å –±–µ–∑–¥–æ–º–Ω—ã–º –∫–æ—à–∫–∞–º –≤ –Ø–ª—Ç–µ –∏ –æ–∫—Ä–µ—Å—Ç–Ω–æ—Å—Ç—è—Ö

üìä <b>–ß—Ç–æ –º—ã –¥–µ–ª–∞–µ–º:</b>
üîπ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —Å—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—è
üîπ –ü—Ä–∏—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∫–æ—Ç—è—Ç –∏ –∫–æ—à–µ–∫
üîπ –õ–µ—á–µ–Ω–∏–µ –±–æ–ª—å–Ω—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö
üîπ –ö–æ—Ä–º–ª–µ–Ω–∏–µ –∏ —É—Ö–æ–¥

üë• <b>–ö–∞–∫ –ø–æ–º–æ—á—å:</b>
üîπ –°—Ç–∞—Ç—å –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–º
üîπ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
üîπ –†–µ–ø–æ—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π
üîπ –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–µ—Ä–µ–¥–µ—Ä–∂–∫–∞

ü§ù <b>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å:</b>
@Lapki_ruchki_Yalta_help - –Ω–∞—à –∫–∞–Ω–∞–ª
–ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –Ω–æ–≤—ã–º –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞–º!"""
            
            bot.send_message(
                message.chat.id,
                about_text,
                parse_mode="HTML",
                disable_web_page_preview=True
            )

        # –°—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—è (—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏)
        elif message.text in ["üí∞ –ü–ª–∞—Ç–Ω–∞—è", "üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è"]:
            button_mapping = {
                "üí∞ –ü–ª–∞—Ç–Ω–∞—è": "paid_text",
                "üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è": "free_text"
            }
            content_key = button_mapping[message.text]
            content = texts.get(content_key, "–ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            send_message_with_image(message.chat.id, content, content_key, use_local=False)
            
        # –ü—Ä–∏—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
        elif message.text == "üë∂ –ö–æ—Ç—è—Ç–∞ –∏—â—É—Ç –¥–æ–º":
            bot.send_message(
                message.chat.id,
                "üë∂ <b>–ö–æ—Ç—è—Ç–∞ –∏—â—É—Ç –¥–æ–º –∏–∑ –∫–∞–Ω–∞–ª–∞ @Lapki_ruchki_Yalta_help:</b>\n\n‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...",
                parse_mode="HTML"
            )
            
            posts = get_adoption_posts()
            
            if posts:
                bot.send_message(
                    message.chat.id,
                    f"üì± <b>–ù–∞–π–¥–µ–Ω–æ {len(posts)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π:</b>",
                    parse_mode="HTML"
                )
                
                for i, post in enumerate(posts[:3], 1):
                    try:
                        caption = f"<b>{post['title']}</b>\n\n{post['description']}\n\nüìÖ {post['date']}\nüìû –°–≤—è–∑–∞—Ç—å—Å—è: {post['contact']}"
                        
                        if post.get('photo'):
                            bot.send_photo(
                                message.chat.id,
                                post['photo'],
                                caption=caption,
                                parse_mode="HTML"
                            )
                        else:
                            bot.send_message(
                                message.chat.id,
                                caption,
                                parse_mode="HTML"
                            )
                    except Exception as e:
                        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞ {i}: {e}")
                        
                # –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–ª–Ω—ã–π –∫–∞–Ω–∞–ª
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(
                    "üì± –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ",
                    url=f"https://t.me/{CHANNEL_USERNAME}"
                ))
                bot.send_message(
                    message.chat.id,
                    "üëÜ <b>–≠—Ç–æ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä—ã</b>\n\n–í—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª–µ:",
                    reply_markup=markup,
                    parse_mode="HTML"
                )
            else:
                bot.send_message(
                    message.chat.id,
                    f"üòî –ü–æ–∫–∞ –Ω–µ—Ç –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π\n\nüì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª: @{CHANNEL_USERNAME}",
                    parse_mode="HTML"
                )
                
        elif message.text == "üê± –í–∑—Ä–æ—Å–ª—ã–µ –∫–æ—à–∫–∏":
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton(
                "üì± –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª",
                url=f"https://t.me/{CHANNEL_USERNAME}"
            ))
            bot.send_message(
                message.chat.id,
                "üê± <b>–í–∑—Ä–æ—Å–ª—ã–µ –∫–æ—à–∫–∏ –∏—â—É—Ç –¥–æ–º</b>\n\n–í—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –æ –ø—Ä–∏—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –≤–∑—Ä–æ—Å–ª—ã—Ö –∫–æ—à–µ–∫ —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ:",
                reply_markup=markup,
                parse_mode="HTML"
            )
            
        elif message.text == "üìù –ü–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ":
            bot.send_message(
                message.chat.id,
                """üìù <b>–ü–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –ø—Ä–∏—Å—Ç—Ä–æ–π—Å—Ç–≤–µ</b>

–î–ª—è –ø–æ–¥–∞—á–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä—É:
üë§ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞: <a href="tel:+79781449070">+7 978 144-90-70</a>

üìã <b>–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:</b>
üîπ –§–æ—Ç–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ (2-3 —Ö–æ—Ä–æ—à–∏—Ö —Å–Ω–∏–º–∫–∞)
üîπ –í–æ–∑—Ä–∞—Å—Ç, –ø–æ–ª, –æ–∫—Ä–∞—Å
üîπ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞
üîπ –ó–¥–æ—Ä–æ–≤—å–µ (–ø—Ä–∏–≤–∏–≤–∫–∏, —Å—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—è)
üîπ –í–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã

üí° <b>–°–æ–≤–µ—Ç—ã –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–∏—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:</b>
‚úÖ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ –≤ —Ö–æ—Ä–æ—à–µ–º —Å–≤–µ—Ç–µ
‚úÖ –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞
‚úÖ –ß–µ—Å—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–¥–æ—Ä–æ–≤—å–µ
‚úÖ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –±—É–¥—É—â–∏—Ö —Ö–æ–∑—è–µ–≤

üì± <b>–¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é –≤ –∫–∞–Ω–∞–ª:</b>
@Lapki_ruchki_Yalta_help""",
                parse_mode="HTML",
                disable_web_page_preview=True
            )
            
        elif message.text == "üîô –ù–∞–∑–∞–¥":
            start(message)
            
        else:
            # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add("üè• –°—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—è", "üè† –ü—Ä–∏—Å—Ç—Ä–æ–π—Å—Ç–≤–æ")
            markup.add("üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
            markup.add("‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ")
            bot.send_message(
                message.chat.id,
                "‚ùì <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é:</b>\n\nüè• –°—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—è - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–Ω–æ–π –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π —Å—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏–∏\nüè† –ü—Ä–∏—Å—Ç—Ä–æ–π—Å—Ç–≤–æ - –∫–æ—Ç—è—Ç–∞ –∏ –∫–æ—à–∫–∏ –∏—â—É—Ç –¥–æ–º\nüö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å - –∫–æ–Ω—Ç–∞–∫—Ç—ã –∫–ª–∏–Ω–∏–∫\nüìû –ö–æ–Ω—Ç–∞–∫—Ç—ã - —Å–≤—è–∑—å —Å –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞–º–∏\n\n–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã: /start, /status",
                reply_markup=markup,
                parse_mode="HTML"
            )
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫: {e}")
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
def setup_webhook():
    try:
        # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π webhook
        bot.remove_webhook()
        time.sleep(3)
        
        if not WEBHOOK_URL:
            logger.error("‚ùå WEBHOOK_URL –Ω–µ –∑–∞–¥–∞–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é RAILWAY_STATIC_URL")
            return False
            
        full_url = f"https://{WEBHOOK_URL}/{TOKEN}"
        
        logger.info(f"üîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook: {full_url}")
        
        result = bot.set_webhook(
            url=full_url, 
            max_connections=10,
            drop_pending_updates=True
        )
        
        if result:
            logger.info(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
            webhook_info = bot.get_webhook_info()
            logger.info(f"üìä Webhook URL: {webhook_info.url}")
            logger.info(f"üìä Pending updates: {webhook_info.pending_update_count}")
            return True
        else:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}")
        return False

# üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ @CatYalta_bot...")
    logger.info(f"üåê URL: https://{WEBHOOK_URL}" if WEBHOOK_URL else "üåê URL: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    if setup_webhook():
        logger.info(f"üéØ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
        app.run(host='0.0.0.0', port=PORT)
    else:
        logger.error("üö® Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:")
        logger.error("1. –£–±–µ–¥–∏—Å—å —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è TOKEN –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è")
        logger.error("2. –î–æ–±–∞–≤—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é RAILWAY_STATIC_URL —Å –¥–æ–º–µ–Ω–æ–º")
        logger.error("3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å")
